import 'dart:async';

import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes
// ignore_for_file: unnecessary_brace_in_string_interps

//WARNING: This file is automatically generated. DO NOT EDIT, all your changes would be lost.

typedef LocaleChangeCallback = void Function(Locale locale);

class I18n implements WidgetsLocalizations {
  const I18n();
  static Locale _locale;
  static bool _shouldReload = false;

  static set locale(Locale newLocale) {
    _shouldReload = true;
    I18n._locale = newLocale;
  }

  static const GeneratedLocalizationsDelegate delegate = GeneratedLocalizationsDelegate();

  /// function to be invoked when changing the language
  static LocaleChangeCallback onLocaleChanged;

  static I18n of(BuildContext context) =>
    Localizations.of<I18n>(context, WidgetsLocalizations);

  @override
  TextDirection get textDirection => TextDirection.ltr;

  /// "Hallo ${name}"
  String greetTo(String name) => "Hallo ${name}";
  /// "Drücke mich"
  String get buttonTabMe => "Drücke mich";
  /// "Bezahlen"
  String get privateWalletPay => "Bezahlen";
  /// "Senden"
  String get privateWalletSend => "Senden";
  /// "Anfordern"
  String get privateWalletRecieve => "Anfordern";
  /// "Guthaben aufladen"
  String get privateWalletClaim => "Guthaben aufladen";
  /// "Einlösen"
  String get walletRedeem => "Einlösen";
  /// "Kassieren"
  String get walletCashier => "Kassieren";
  /// "Verlauf"
  String get walletTimeline => "Verlauf";
  /// "Betrag"
  String get titlePrivateRequest => "Betrag";
  /// "Geld anfordern"
  String get buttonPrivateRequest => "Geld anfordern";
  /// "Rechnung erstellen"
  String get buttonShopRequest => "Rechnung erstellen";
  /// "alle Bewegungen anzeigen"
  String get showAllTransactions => "alle Bewegungen anzeigen";
  /// "Keine Bewegungen"
  String get emptyTransactions => "Keine Bewegungen";
  /// "Wallet hinzufügen"
  String get addWallet => "Wallet hinzufügen";
  /// "Dieses Feld muss ausgefüllt werden."
  String get formErrorRequired => "Dieses Feld muss ausgefüllt werden.";
  /// "Verifizieren"
  String get titleClaimVerification => "Verifizieren";
  /// "Jetzt verifizieren"
  String get buttonClaimVerification => "Jetzt verifizieren";
  /// "Später verifizieren"
  String get canselClaimVerification => "Später verifizieren";
  /// "Verifizierung"
  String get titleFormClaimVerification => "Verifizierung";
  /// "Verifizieren"
  String get buttonFormClaimVerification => "Verifizieren";
  /// "Personalien"
  String get verificationPrivateFormTitle => "Personalien";
  /// "UID"
  String get verificationShopFormTitle => "UID";
  /// "Firma"
  String get verificationShopFormCompanyTitle => "Firma";
  /// "Unternehmens-Identifikationsnummer (UID) \n\nIhre UID finden Sie unter: "
  String get verificationShopFormUidDescription => "Unternehmens-Identifikationsnummer (UID) \n\nIhre UID finden Sie unter: ";
  /// "https://www.uid.admin.ch/"
  String get verificationShopFormUidLink => "https://www.uid.admin.ch/";
  /// "Ich habe keine UID"
  String get verificationShopFormUidNoUid => "Ich habe keine UID";
  /// "Ich bestätige, dass ich Anrecht auf dieses Guthaben habe, dass alle Angaben wahrheitsgetreu ausgefüllt sind, und dass ich mit der Nutzung meiner Daten nach den"
  String get verificationFilledTruthfullyPart1 => "Ich bestätige, dass ich Anrecht auf dieses Guthaben habe, dass alle Angaben wahrheitsgetreu ausgefüllt sind, und dass ich mit der Nutzung meiner Daten nach den";
  /// " AGBs "
  String get verificationFilledTruthfullyPart2 => " AGBs ";
  /// "einverstanden bin."
  String get verificationFilledTruthfullyPart3 => "einverstanden bin.";
  /// "Ich bestätige dass ich das Recht auf dieses Gewerbe Wallet habe, dass alle Angaben wahrheitsgetreu ausgefüllt sind, und dass ich mit der Nutzung meiner Daten nach den"
  String get verificationFilledTruthfullyShopPart1 => "Ich bestätige dass ich das Recht auf dieses Gewerbe Wallet habe, dass alle Angaben wahrheitsgetreu ausgefüllt sind, und dass ich mit der Nutzung meiner Daten nach den";
  /// " AGBs "
  String get verificationFilledTruthfullyShopPart2 => " AGBs ";
  /// "einverstanden bin."
  String get verificationFilledTruthfullyShopPart3 => "einverstanden bin.";
  /// "https://www.ecoo.ch/datenschutz/"
  String get verificationFilledTruthfullyTosUrl => "https://www.ecoo.ch/datenschutz/";
  /// "Anfrage gesendet."
  String get verificationSend => "Anfrage gesendet.";
  /// "PIN eingeben"
  String get pinVerificationTitle => "PIN eingeben";
  /// "PIN erhalten von der Stadt"
  String get pinRecieved => "PIN erhalten von der Stadt";
  /// "Geben Sie den PIN ein, den sie von Ihrer Stadt erhalten haben."
  String get enterPin => "Geben Sie den PIN ein, den sie von Ihrer Stadt erhalten haben.";
  /// "PIN"
  String get pinInputLabel => "PIN";
  /// "Verifizierung erfolgreich"
  String get successTextVerification => "Verifizierung erfolgreich";
  /// "Überprüfen"
  String get verifyPinButton => "Überprüfen";
  /// "Umsatz einlösen"
  String get titleRedeem => "Umsatz einlösen";
  /// "Umsatz einlösen"
  String get buttonRedeem => "Umsatz einlösen";
  /// "Der Betrag wird übermittelt an:"
  String get redeemTransferTo => "Der Betrag wird übermittelt an:";
  /// "Nach der Überprüfung wird Ihnen das Geld auf das angegebende Konto überwiesen."
  String get redeemInfo => "Nach der Überprüfung wird Ihnen das Geld auf das angegebende Konto überwiesen.";
  /// "Name der Bank"
  String get redeemFieldNameBank => "Name der Bank";
  /// "IBAN Nummer"
  String get redeemFieldIBAN => "IBAN Nummer";
  /// "Kontoinhaber"
  String get redeemFieldAccountOwner => "Kontoinhaber";
  /// "Geld senden"
  String get titlePaymentOverview => "Geld senden";
  /// "Bezahlen"
  String get buttonPaymentOverview => "Bezahlen";
  /// "Betrag & Empfänger"
  String get titlePaymentScreen => "Betrag & Empfänger";
  /// "Senden an:"
  String get labelRecieverInput => "Senden an:";
  /// "Wallet ID"
  String get hintRecieverInput => "Wallet ID";
  /// "Uups, ist etwas vergessen gegangen."
  String get inputValidation => "Uups, ist etwas vergessen gegangen.";
  /// "Uups, der Betrag ist vergessen gegangen."
  String get validationAmountInput => "Uups, der Betrag ist vergessen gegangen.";
  /// "Uups, der Empfänger ist vergessen gegangen."
  String get validationRecieverInput => "Uups, der Empfänger ist vergessen gegangen.";
  /// "QR Rechnung"
  String get titleRequestScreen => "QR Rechnung";
  /// "Wallet ${walletId}"
  String walletRequestScreen(String walletId) => "Wallet ${walletId}";
  /// "CHF ${amount}"
  String amountRequestScreen(String amount) => "CHF ${amount}";
  /// "ecoo"
  String get titleSplashScreen => "ecoo";
  /// "Registrieren"
  String get titleRegisterScreen => "Registrieren";
  /// "Um das ecoo-App zu benutzen, müssen Sie sich zuerst mit Ihrer Apple ID oder Google ID registrieren. Dies dient zur Anmeldung und weder Google noch Apple hat Zugriff auf Ihre Daten im App selbst."
  String get descriptionRegisterScreen => "Um das ecoo-App zu benutzen, müssen Sie sich zuerst mit Ihrer Apple ID oder Google ID registrieren. Dies dient zur Anmeldung und weder Google noch Apple hat Zugriff auf Ihre Daten im App selbst.";
  /// "Mit Apple fortfahren"
  String get signinwithappleRegisterScreen => "Mit Apple fortfahren";
  /// "Mit Google fortfahren"
  String get signinwithgoogleRegisterScreen => "Mit Google fortfahren";
  /// "Einführung wiederholen"
  String get onboardingRegisterScreen => "Einführung wiederholen";
  /// "Meine Wallets"
  String get titleMenuScreen => "Meine Wallets";
  /// "Erste Schritte"
  String get onboardingMenuScreen => "Erste Schritte";
  /// "FAQ & Hilfe"
  String get faqhelpMenuScreen => "FAQ & Hilfe";
  /// "Datenschutzbestimmungen"
  String get privacyPolicyMenuScreen => "Datenschutzbestimmungen";
  /// "App Version:"
  String get appversionMenuScreen => "App Version:";
  /// "Wallet"
  String get walletMenuScreen => "Wallet";
  /// "QR Code scannen"
  String get titleScanScreen => "QR Code scannen";
  /// "Selber eintippen"
  String get cancelScan => "Selber eintippen";
  /// "Bezahlung erfolgreich"
  String get paymentSuccessful => "Bezahlung erfolgreich";
  /// "Keine Internetverbindung"
  String get noServiceErrorTitle => "Keine Internetverbindung";
  /// "Es besteht keine Verbindung zum Internet."
  String get noServiceErrorText => "Es besteht keine Verbindung zum Internet.";
  /// "Fehler"
  String get generalErrorTitle => "Fehler";
  /// "Es ist ein unbekannter Fehler aufgetreten."
  String get generalErrorText => "Es ist ein unbekannter Fehler aufgetreten.";
  /// "Zahlung fehlgeschlagen"
  String get paymentFailed => "Zahlung fehlgeschlagen";
  /// "Überprüfe deine Internetverbindung und probiere es noch einmal oder lasse dein gegenüber den QR-Code scannen."
  String get paymentFailedInfo => "Überprüfe deine Internetverbindung und probiere es noch einmal oder lasse dein gegenüber den QR-Code scannen.";
  /// "Ich zahle den offenen Betrag an:"
  String get iPay => "Ich zahle den offenen Betrag an:";
  /// "ecoo"
  String get page1TitleOnboardingScreen => "ecoo";
  /// "Registrierung und Verifizierung"
  String get page1HeadlineOnboardingScreen => "Registrierung und Verifizierung";
  /// "Um ecoo nutzen zu können, müssen Sie sich zuerst mit Ihrer Apple ID oder Google ID registrieren. \n\nIm zweiten Schritt verifizieren Sie sich mit den geforderten Angaben bei Ihrer Stadt. Danach erhalten Sie automatisch das Guthaben auf Ihr Wallet."
  String get page1DescriptionOnboardingScreen => "Um ecoo nutzen zu können, müssen Sie sich zuerst mit Ihrer Apple ID oder Google ID registrieren. \n\nIm zweiten Schritt verifizieren Sie sich mit den geforderten Angaben bei Ihrer Stadt. Danach erhalten Sie automatisch das Guthaben auf Ihr Wallet.";
  /// "Privat Wallet"
  String get page2TitleOnboardingScreen => "Privat Wallet";
  /// "Zahlen, Senden & Geld anfordern"
  String get page2HeadlineOnboardingScreen => "Zahlen, Senden & Geld anfordern";
  /// "Als Privatperson haben Sie die Möglichkeit, in den verifizierten Geschäften mit ecoo zu bezahlen.\n\nSie können anderen ecoo-Benutzer*innen Guthaben senden oder Guthaben von anderen anfordern.\n\nEs besteht die Möglichkeit, alle erhaltenen Gutscheine Ihrer Familie in einem Wallet zu speichern."
  String get page2DescriptionOnboardingScreen => "Als Privatperson haben Sie die Möglichkeit, in den verifizierten Geschäften mit ecoo zu bezahlen.\n\nSie können anderen ecoo-Benutzer*innen Guthaben senden oder Guthaben von anderen anfordern.\n\nEs besteht die Möglichkeit, alle erhaltenen Gutscheine Ihrer Familie in einem Wallet zu speichern.";
  /// "Shop Wallet"
  String get page3TitleOnboardingScreen => "Shop Wallet";
  /// "Einkassieren & Senden"
  String get page3HeadlineOnboardingScreen => "Einkassieren & Senden";
  /// "Mit einem Shop Wallet sind Sie in wenigen Schritten bereit, Einkäufe in Ihrem Geschäft über die ecoo-App zu kassieren.\n\nSie haben die Möglichkeit, Beträge anderen ecoo-Benutzern*innen zu senden."
  String get page3DescriptionOnboardingScreen => "Mit einem Shop Wallet sind Sie in wenigen Schritten bereit, Einkäufe in Ihrem Geschäft über die ecoo-App zu kassieren.\n\nSie haben die Möglichkeit, Beträge anderen ecoo-Benutzern*innen zu senden.";
  /// "Shop Wallet"
  String get page4TitleOnboardingScreen => "Shop Wallet";
  /// "Umsatz einlösen"
  String get page4HeadlineOnboardingScreen => "Umsatz einlösen";
  /// "Nach der Verifizierung bei Ihrer Stadt, können Sie mit wenigen Klicks den erzielten Umsatz bei der Stadt einlösen.\n\nNach der Überpüfung wird Ihnen der Betrag auf dem angegeben Konto gutgeschrieben."
  String get page4DescriptionOnboardingScreen => "Nach der Verifizierung bei Ihrer Stadt, können Sie mit wenigen Klicks den erzielten Umsatz bei der Stadt einlösen.\n\nNach der Überpüfung wird Ihnen der Betrag auf dem angegeben Konto gutgeschrieben.";
  /// "Einführung überspringen"
  String get buttonTextSkipOnboardingScreen => "Einführung überspringen";
  /// "Jetzt registrieren"
  String get buttonTextNextOnboardingScreen => "Jetzt registrieren";
  /// "Wallet Typ"
  String get titleRegisterWalletTypeScreen => "Wallet Typ";
  /// "Bitte wählen Sie hier aus, welchen Typ Wallet Sie brauchen. Alle Privatpersonen mit Wohnsitz in Wetzikon per 1. September 2020 haben Anrecht auf ein Privat Wallet. Als Gewerbebesitzer*in machen Sie für Ihr Geschäft zusätzlich ein Firmen Wallet auf."
  String get descriptionRegisterWalletTypeScreen => "Bitte wählen Sie hier aus, welchen Typ Wallet Sie brauchen. Alle Privatpersonen mit Wohnsitz in Wetzikon per 1. September 2020 haben Anrecht auf ein Privat Wallet. Als Gewerbebesitzer*in machen Sie für Ihr Geschäft zusätzlich ein Firmen Wallet auf.";
  /// "Privat"
  String get privateRegisterWalletTypeScreen => "Privat";
  /// "Firma"
  String get shopRegisterWalletTypeScreen => "Firma";
  /// "Guthaben aufladen"
  String get titleRegisterVerifyScreenPrivate => "Guthaben aufladen";
  /// "Eintauschen"
  String get titleRegisterVerifyScreenShop => "Eintauschen";
  /// "Um Guthaben auf das Wallet zu laden, müssen Sie sich verifizieren lassen.\n\nNach automatischer Überprüfung Ihrer Daten, wird Ihnen ein PIN per SMS zugeschickt, mit dem Sie diesen Prozess abschliessen können.\n\nWeitere Fragen zur WetziKoin Kampagne\n"
  String get descriptionRegisterVerifyScreenPrivate => "Um Guthaben auf das Wallet zu laden, müssen Sie sich verifizieren lassen.\n\nNach automatischer Überprüfung Ihrer Daten, wird Ihnen ein PIN per SMS zugeschickt, mit dem Sie diesen Prozess abschliessen können.\n\nWeitere Fragen zur WetziKoin Kampagne\n";
  /// "https://www.wetzikon.ch/ecoupon"
  String get descriptionRegisterVerifyScreenLink => "https://www.wetzikon.ch/ecoupon";
  /// "Um Ihr Guthaben bei der Stadt gegen Schweizer Franken umzutauschen, müssen Sie sich verifizieren lassen.\n\nNach automatischer Überprüfung Ihrer Daten, wird Ihnen ein PIN per Post zu geschickt. Mit diesem PIN schliessen die den Verifizierungsprozess ab. In der Zwischenzeit können Sie trotzdem schon Zahlungen via App annehmen.\n\nWeitere Fragen zur WetziKoin Kampagne\n"
  String get descriptionRegisterVerifyScreenShop => "Um Ihr Guthaben bei der Stadt gegen Schweizer Franken umzutauschen, müssen Sie sich verifizieren lassen.\n\nNach automatischer Überprüfung Ihrer Daten, wird Ihnen ein PIN per Post zu geschickt. Mit diesem PIN schliessen die den Verifizierungsprozess ab. In der Zwischenzeit können Sie trotzdem schon Zahlungen via App annehmen.\n\nWeitere Fragen zur WetziKoin Kampagne\n";
  /// "Jetzt verifizieren"
  String get verifyButtonRegisterVerifyScreen => "Jetzt verifizieren";
  /// "Verifizierung überspringen"
  String get verifyLaterButtonRegisterVerifyScreen => "Verifizierung überspringen";
  /// "Vorname"
  String get verifyFormFieldFirstName => "Vorname";
  /// "Nachname"
  String get verifyFormFieldLastName => "Nachname";
  /// "Mobiltelefonnummer"
  String get verifyFormFieldPhoneNumber => "Mobiltelefonnummer";
  /// "Telefonnummer"
  String get verifyFormShopFieldPhoneNumber => "Telefonnummer";
  /// "Geburtsdatum"
  String get verifyFormFieldBirthday => "Geburtsdatum";
  /// "Adresse"
  String get verifyFormFieldAddress => "Adresse";
  /// "Strasse Hausnummer PLZ Ort"
  String get verifyFormFieldAddressHint => "Strasse Hausnummer PLZ Ort";
  /// "Strasse & Hausnummer"
  String get verifyFormFieldStreet => "Strasse & Hausnummer";
  /// "PLZ"
  String get verifyFormFieldPostcode => "PLZ";
  /// "Ort"
  String get verifyFormFieldCity => "Ort";
  /// "Heimatort (nur für Nationalität: Schweiz)"
  String get verifyFormFieldHeimatort => "Heimatort (nur für Nationalität: Schweiz)";
  /// "Nationalität"
  String get verifyFormFieldNationality => "Nationalität";
  /// "Firmenname"
  String get verifyFormFieldCompany => "Firmenname";
  /// "Transaktion erfolgreich"
  String get transactionSuccessful => "Transaktion erfolgreich";
  /// "Paper Wallet scannen"
  String get scanPaperWalletButton => "Paper Wallet scannen";
  /// "Ihre Angaben konnten nicht verifizert werden. Die Stadt wird sich in Kürze bei Ihnen melden und die nächsten Schritte besprechen."
  String get verifyFormErrorVerification => "Ihre Angaben konnten nicht verifizert werden. Die Stadt wird sich in Kürze bei Ihnen melden und die nächsten Schritte besprechen.";
  /// "Das Wallet konnte nicht erstellt werden. Versuche es noch einmal."
  String get walletSelectionScreenError => "Das Wallet konnte nicht erstellt werden. Versuche es noch einmal.";
  /// "https://ecoo.ch/faq"
  String get faqUrl => "https://ecoo.ch/faq";
  /// "https://www.ecoo.ch/datenschutz/"
  String get dataPolicyUrl => "https://www.ecoo.ch/datenschutz/";
  /// "https://tezos.foundation/"
  String get tezosFoundationUrl => "https://tezos.foundation/";
  /// "Einen Moment, bitte"
  String get migrationTitle => "Einen Moment, bitte";
  /// "Ihre Wallets müssen geprüft und eventuell migriert werden. Dies kann einige Minuten dauern, danach können Sie die App wie gewohnt verwenden."
  String get migrationText => "Ihre Wallets müssen geprüft und eventuell migriert werden. Dies kann einige Minuten dauern, danach können Sie die App wie gewohnt verwenden.";
  /// "Status offen"
  String get migrationWaitingForCheck => "Status offen";
  /// "Wallet wird geprüft"
  String get migrationChecking => "Wallet wird geprüft";
  /// "Ihr Wallet wird migriert. Dies kann 1-2 Minuten dauern."
  String get migrationMigrating => "Ihr Wallet wird migriert. Dies kann 1-2 Minuten dauern.";
  /// "Ihr Wallet ist voll einsatzfähig."
  String get migrationDone => "Ihr Wallet ist voll einsatzfähig.";
  /// "Ihre Wallet konnte nicht migriert werden. Melden Sie sich beim Systemadministrator."
  String get migrationFail => "Ihre Wallet konnte nicht migriert werden. Melden Sie sich beim Systemadministrator.";
  /// "Fertig"
  String get cupertinoDatePickerDialogFinishButton => "Fertig";
  /// "Login erforderlich"
  String get authFailureTitle => "Login erforderlich";
  /// "Du bist nicht eingeloggt."
  String get authFailureText => "Du bist nicht eingeloggt.";
  /// "Schutz erforderlich"
  String get noPinFailureTitle => "Schutz erforderlich";
  /// "Diese App erfordert es, dass du ein Pin, einen Fingerprint oder eine Face ID zum Schutz einrichtest."
  String get noPinFailureText => "Diese App erfordert es, dass du ein Pin, einen Fingerprint oder eine Face ID zum Schutz einrichtest.";
  /// "Keine Transaktion möglich"
  String get noTransactionFailureTitle => "Keine Transaktion möglich";
  /// "Für dieses Wallet können keine Transaktionen auf diesem Gerät gemacht werden. Bitte konatktiere den Systemadministrator."
  String get noTransactionFailureText => "Für dieses Wallet können keine Transaktionen auf diesem Gerät gemacht werden. Bitte konatktiere den Systemadministrator.";
  /// "Weiter"
  String get verifyFormFieldNextButton => "Weiter";
  /// "Bitte geben Sie eine gültige Adresse ein."
  String get noAddressSuggestions => "Bitte geben Sie eine gültige Adresse ein.";
  /// "Bitte geben Sie einen gültigen Heimatort ein."
  String get noOriginSuggestions => "Bitte geben Sie einen gültigen Heimatort ein.";
  /// "Sie haben die maximale Anzahl der automatisch verifizierbaren Wallets erreicht. Die Stadt wird sich bei Ihnen melden."
  String get verifyMaxClaimsReached => "Sie haben die maximale Anzahl der automatisch verifizierbaren Wallets erreicht. Die Stadt wird sich bei Ihnen melden.";
  /// "Ihre Angaben werden von der Stadt geprüft. Sie werden kontaktiert."
  String get verifyNoUidInfo => "Ihre Angaben werden von der Stadt geprüft. Sie werden kontaktiert.";
}

class _I18n_de_CH extends I18n {
  const _I18n_de_CH();

  @override
  TextDirection get textDirection => TextDirection.ltr;
}

class _I18n_en_US extends I18n {
  const _I18n_en_US();

  /// "Hallo ${name}"
  @override
  String greetTo(String name) => "Hallo ${name}";
  /// "Tap me"
  @override
  String get buttonTabMe => "Tap me";

  @override
  TextDirection get textDirection => TextDirection.ltr;
}

class GeneratedLocalizationsDelegate extends LocalizationsDelegate<WidgetsLocalizations> {
  const GeneratedLocalizationsDelegate();
  List<Locale> get supportedLocales {
    return const <Locale>[
      Locale("de", "CH"),
      Locale("en", "US")
    ];
  }

  LocaleResolutionCallback resolution({Locale fallback}) {
    return (Locale locale, Iterable<Locale> supported) {
      if (isSupported(locale)) {
        return locale;
      }
      final Locale fallbackLocale = fallback ?? supported.first;
      return fallbackLocale;
    };
  }

  @override
  Future<WidgetsLocalizations> load(Locale locale) {
    I18n._locale ??= locale;
    I18n._shouldReload = false;
    final String lang = I18n._locale != null ? I18n._locale.toString() : "";
    final String languageCode = I18n._locale != null ? I18n._locale.languageCode : "";
    if ("de_CH" == lang) {
      return SynchronousFuture<WidgetsLocalizations>(const _I18n_de_CH());
    }
    else if ("en_US" == lang) {
      return SynchronousFuture<WidgetsLocalizations>(const _I18n_en_US());
    }
    else if ("de" == languageCode) {
      return SynchronousFuture<WidgetsLocalizations>(const _I18n_de_CH());
    }
    else if ("en" == languageCode) {
      return SynchronousFuture<WidgetsLocalizations>(const _I18n_en_US());
    }

    return SynchronousFuture<WidgetsLocalizations>(const I18n());
  }

  @override
  bool isSupported(Locale locale) {
    for (var i = 0; i < supportedLocales.length && locale != null; i++) {
      final l = supportedLocales[i];
      if (l.languageCode == locale.languageCode) {
        return true;
      }
    }
    return false;
  }

  @override
  bool shouldReload(GeneratedLocalizationsDelegate old) => I18n._shouldReload;
}