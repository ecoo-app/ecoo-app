import 'dart:convert';

import 'package:e_coupon/generated/i18n.dart';
import 'package:e_coupon/injection.dart';
import 'package:e_coupon/ui/core/router.dart';
import 'package:e_coupon/ui/screens/wallet_screens/wallet_view_model.dart';
import 'package:e_coupon/ui/screens/wallets_overview/wallets_view_model.dart';
import 'package:flutter/material.dart';
import 'package:flutter_localizations/flutter_localizations.dart';
import 'package:http/http.dart' as http;
import 'package:provider/provider.dart';

import 'ui/shared/video_cell.dart';

void main() {
  configureInjection(Env.mock);
  runApp(
    MultiProvider(
      providers: [
        ChangeNotifierProvider<WalletViewModel>(
            create: (_) => getIt<WalletViewModel>()),
        ChangeNotifierProvider<WalletsViewModel>(
            create: (_) => getIt<WalletsViewModel>()),
      ],
      child: ECouponApp(),
    ),
  );
  // runApp(
  //   ChangeNotifierProvider<WalletsViewModel>(
  //     create: (_) => serviceLocator<WalletsViewModel>(),
  //     child: TestApp(),
  //   ),
  // );
  //runApp(TestApp());
}

class ECouponApp extends StatelessWidget {
  final Locale _locale = Locale('de', 'CH');

  @override
  Widget build(BuildContext context) {
    // autogenerated i18n delegate from vscode extension https://github.com/esskar/vscode-flutter-i18n-json
    final i18n = I18n.delegate;

    return new MaterialApp(
      localizationsDelegates: [
        // ... app-specific localization delegate[s] here
        i18n,
        GlobalMaterialLocalizations.delegate,
        GlobalWidgetsLocalizations.delegate,
        GlobalCupertinoLocalizations.delegate,
      ],
      locale: _locale,
      supportedLocales: i18n.supportedLocales,
      localeResolutionCallback:
          i18n.resolution(fallback: new Locale("de", "CH")),
      theme: ThemeData(
          accentColor: Colors.amber,
          primaryColor: Colors.cyan,
          scaffoldBackgroundColor: Colors.white),
      title: "eCoupon",
      onGenerateRoute: Router.generateRoute,
      initialRoute: WalletDetailRoute,
    );
  }
}

/// ****
///
///
/// drafts
///
///
/// ****

class TestApp extends StatefulWidget {
  @override
  State<StatefulWidget> createState() {
    return new HomeState();
  }
}

class HomeState extends State<TestApp> {
  var _isLoading = true;
  var videos;

  _fetchData() async {
    print("fetch data");

    final url = "https://api.letsbuildthatapp.com/youtube/home_feed";
    final response = await http.get(url);

    if (response.statusCode == 200) {
      final map = json.decode(response.body);
      final videosJson = map["videos"];
      // videosJson.forEach((video) {
      //   print(video["name"]);
      // });

      setState(() {
        _isLoading = false;
        videos = videosJson;
      });
    }
  }

  @override
  Widget build(BuildContext context) {
    return new MaterialApp(
      title: "übersicht",
      home: new Scaffold(
          appBar: new AppBar(title: new Text("Übersicht"), actions: <Widget>[
            new IconButton(
                icon: new Icon(Icons.refresh),
                onPressed: () {
                  print("Reloading...");
                  setState(() {
                    _isLoading = true;
                  });
                  _fetchData();
                })
          ]),
          body: new Center(
            child: _isLoading
                ? new CircularProgressIndicator()
                : new ListView.builder(
                    itemCount: videos != null ? videos.length : 0,
                    itemBuilder: (context, i) {
                      final video = videos[i];
                      return new FlatButton(
                          child: new VideoCell(video),
                          onPressed: () {
                            // TODO change to named route
                            Navigator.push(context,
                                new MaterialPageRoute(builder: (context) {
                              return new DetailPage();
                            }));
                          });
                    }),
          )),
    );
  }
}

class DetailPage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return new Scaffold(
      appBar: new AppBar(
        title: new Text('detail page'),
      ),
      body: new Center(child: new Text('Detail')),
    );
  }
}

class HomeWidget extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return new ListView.builder(
      itemBuilder: (context, rowNumber) {
        return new WalletListItem(); //new Text("row $rowNumber");
      },
      itemCount: 20,
    );
  }
}

class WalletListItem extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return new Column(
      children: <Widget>[new Text("row"), new Divider(color: Colors.amber)],
    );
  }
}
