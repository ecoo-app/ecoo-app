# Continuous Deployment

name: CD

# only 'master'
on:
  push:
    branches:
      - "releases/**"
    tags:
      - "**"

jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Fetch all history for all tags and branches
        run: git fetch --prune --unshallow
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.4
        with:
          versionSpec: "5.2.x"
      - name: Use GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.4
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: "1.20.3"
          channel: "stable"
      - uses: fusion-engineering/setup-git-credentials@v2
        with:
          credentials: ${{secrets.ECOUPON_LIB_GIT_ACCESS_TOKEN}}

      # Generate SemVer Info for setting app version
      - name: Define Variables
        run: |
          echo "::set-env name=VersionMajorMinorPatch::${{ steps.gitversion.outputs.majorMinorPatch }}"
          echo "::set-env name=VersionMajorMinorPatchBuild::$(printf '%s.%s' "${{ steps.gitversion.outputs.majorMinorPatch }}" "$GITHUB_RUN_NUMBER")"
          echo "::set-env name=VersionAndroidFullNumeric::$(printf '%02d%02d%02d%03d' "${{ steps.gitversion.outputs.major }}" "${{ steps.gitversion.outputs.minor }}" "${{ steps.gitversion.outputs.patch }}" "$GITHUB_RUN_NUMBER")"

      # Prepare Build Tools
      - name: Setup
        run: |
          flutter pub get
          make generate_code

      # Build Android App
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: "2.7"
      - name: Build Android
        run: |
          echo "$KEYSTORE" | base64 --decode > ./android/assets/ecoupon.keystore.jks
          dart tool/generate_config.dart
          flutter build appbundle -t ./lib/main_prod.dart --release --build-name ${{ env.VersionMajorMinorPatchBuild }} --build-number ${{ env.VersionAndroidFullNumeric }}
          cd android
          gem install bundler
          bundle install
          bundle exec fastlane deploy
        env:
          KEYSTORE: ${{ secrets.ANDROID_KEYSTORE }}
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_PLAY_API_SA: ${{ secrets.ANDROID_PLAY_API_SA }}
          APP_PAPERWALLET_DECRYPTION_KEY: ${{ secrets.APP_PAPERWALLET_DECRYPTION_KEY }}
          LANG: en_US.UTF-8
          LC_ALL: en_US.UTF-8

  build-ios:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Fetch all history for all tags and branches
        run: git fetch --prune --unshallow
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.4
        with:
          versionSpec: "5.2.x"
      - name: Use GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.4
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: "1.20.3"
          channel: "stable"
      - uses: fusion-engineering/setup-git-credentials@v2
        with:
          credentials: ${{secrets.ECOUPON_LIB_GIT_ACCESS_TOKEN}}
          # Generate SemVer Info for setting app version
      - name: Define Variables
        run: |
          echo "::set-env name=VersionMajorMinorPatch::${{ steps.gitversion.outputs.majorMinorPatch }}"
          echo "::set-env name=VersionMajorMinorPatchBuild::$(printf '%s.%s' "${{ steps.gitversion.outputs.majorMinorPatch }}" "$GITHUB_RUN_NUMBER")"
          echo "::set-env name=VersionAndroidFullNumeric::$(printf '%02d%02d%02d%03d' "${{ steps.gitversion.outputs.major }}" "${{ steps.gitversion.outputs.minor }}" "${{ steps.gitversion.outputs.patch }}" "$GITHUB_RUN_NUMBER")"
      # Prepare Build Tools
      - name: Setup
        run: |
          flutter pub get
          make generate_code
      # Build iOS App
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: "2.7"
      - uses: apple-actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.IOS_CERTIFICATES_P12 }}
          p12-password: ${{ secrets.IOS_CERTIFICATES_P12_PASSWORD }}
      - name: Build iOS
        run: |
          dart tool/generate_config.dart
          flutter build ios -t ./lib/main_prod.dart --release --no-codesign --build-name ${{ env.VersionMajorMinorPatch }} --build-number ${{ env.VersionMajorMinorPatchBuild }}
          cd ios
          gem install bundler
          bundle install
          bundle exec fastlane deploy
        env:
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
          APP_PAPERWALLET_DECRYPTION_KEY: ${{ secrets.APP_PAPERWALLET_DECRYPTION_KEY }}
